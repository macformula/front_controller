/*
 * canal_fc_messages.h
 *
 *  WARNING: DO NOT EDIT. THIS WAS AN AUTOGENERATED FILE.
 *
 *  Created on: 2023/6/4
 *     Authors: Samuel Parent, Dharak Verma
 *
 *                    ..::^~~~!!~~~^^:..
 *                .:^!7??JJJJJJJJJJJJ??7!~:.
 *              :~7?JJJ???????????????JJJJ??!^.
 *           .^7?JJJ???JJJJJJ??????????????JJJ?~:
 *          ^7JJ???????777777???JJJJJJJ???????JJ?~.
 *        .!JJ???????????7!~^::::^~!!7??JJ???????J7:
 *       :7JJJ??????????JJJJ??7~:    ..:~7?J??????J?^
 *      .7J???????????????????JJ?!.       :7J??????J?^
 *     .~J??????????????????JJJJ?!.       .7J???????J7.
 *     :?J?????????????JJJJ??7!^.      .:~???????????J~
 *     ^???????????JJJ??7~^:..      .:~7?JJ??????????J!.
 *     ^????????JJ?7~^:.        .:~!?JJJ?????????????J!.
 *     ^????????!^.          .:~7?JJJ????????????????J!.
 *     .7J????!.            :7?JJ?????????????????????^
 *      ~JJ?J7.             ~JJJJ???????????????????J!.
 *      .!J???^.            .^!7?JJJJJJ????????????J7:
 *       .!?J??7^.              .:^~!7???JJJJJ????J7:
 *        .^?JJJJ?7~.                 ..:^~~!7????!.
 *          .!?JJJJ?:                         ..::
 *            :~??!:
 *              ..
 */

#ifndef INC_CANAL_FC_MESSAGES_H_
#define INC_CANAL_FC_MESSAGES_H_

 /*********************************************************
 *                      INCLUDES
 *********************************************************/
#include <stdio.h>
#include <stdint.h>
#include <string.h>
#include "canal_types.h"

/*********************************************************
*                        ENUMS
*********************************************************/

typedef enum {
    UNKNOWN_CANAL_ID =                    ((uint32_t) 0x000),
    AMK1_SETPOINTS1_CANAL_ID =            ((uint32_t) 0x186),
    AMK1_ACTUALVALUES2_CANAL_ID =         ((uint32_t) 0x287),
    AMK1_ACTUALVALUES1_CANAL_ID =         ((uint32_t) 0x285),
    AMK0_ACTUALVALUES1_CANAL_ID =         ((uint32_t) 0x284),
    AMK0_ACTUALVALUES2_CANAL_ID =         ((uint32_t) 0x286),
    AMK0_SETPOINTS1_CANAL_ID =            ((uint32_t) 0x185),
    CONTACTOR_STATES_CANAL_ID =           ((uint32_t) 0x622),
    PACK_STATE_CANAL_ID =                 ((uint32_t) 0x624),
    PACK_CURRENT_LIMITS_CANAL_ID =        ((uint32_t) 0x623),
    PACK_SOC_CANAL_ID =                   ((uint32_t) 0x625),
    CONTACTOR_FEEDBACK_CANAL_ID =         ((uint32_t) 0x626),
} TeMessageID;

/*********************************************************
*                     MESSAGE STRUCTS
*********************************************************/
/** 
 * Message: AMK1_SetPoints1
 * Senders: ['FC']
 * Receivers: ['AMK1']
 * Cycle Time: 5
 * Bus: Undefined
 */
typedef struct AMK1_SetPoints1 {    
    // Unit: None
    _Bool AMK_bInverterOn;    
    // Unit: None
    _Bool AMK_bDcOn;    
    // Unit: None
    _Bool AMK_bEnable;    
    // Unit: None
    _Bool AMK_bErrorReset;    
    // Unit: rpm
    int16_t AMK_TargetVelocity;    
    // Unit: 0.1%Mn
    int16_t AMK_TorqueLimitPositiv;    
    // Unit: 0.1%Mn
    int16_t AMK_TorqueLimitNegativ;
}TsAMK1_SetPoints1;

/** 
 * Message: AMK1_ActualValues2
 * Senders: ['AMK1']
 * Receivers: ['FC']
 * Cycle Time: 5
 * Bus: Undefined
 */
typedef struct AMK1_ActualValues2 {    
    // Unit: ï¿½C
    float AMK_TempMotor;    
    // Unit: ï¿½C
    float AMK_TempInverter;    
    // Unit: None
    uint16_t AMK_ErrorInfo;    
    // Unit: ï¿½C
    float AMK_TempIGBT;
}TsAMK1_ActualValues2;

/** 
 * Message: AMK1_ActualValues1
 * Senders: ['AMK1']
 * Receivers: ['FC']
 * Cycle Time: 5
 * Bus: Undefined
 */
typedef struct AMK1_ActualValues1 {    
    // Unit: None
    _Bool AMK_bSystemReady;    
    // Unit: None
    _Bool AMK_bError;    
    // Unit: None
    _Bool AMK_bWarn;    
    // Unit: None
    _Bool AMK_bQuitDcOn;    
    // Unit: None
    _Bool AMK_bDcOn;    
    // Unit: None
    _Bool AMK_bQuitInverterOn;    
    // Unit: None
    _Bool AMK_bInverterOn;    
    // Unit: None
    _Bool AMK_bDerating;    
    // Unit: rpm
    int16_t AMK_ActualVelocity;    
    // Unit: None
    int16_t AMK_TorqueCurrent;    
    // Unit: None
    int16_t AMK_MagnetizingCurrent;
}TsAMK1_ActualValues1;

/** 
 * Message: AMK0_ActualValues1
 * Senders: ['AMK0']
 * Receivers: ['FC']
 * Cycle Time: 5
 * Bus: Undefined
 */
typedef struct AMK0_ActualValues1 {    
    // Unit: None
    _Bool AMK_bSystemReady;    
    // Unit: None
    _Bool AMK_bError;    
    // Unit: None
    _Bool AMK_bWarn;    
    // Unit: None
    _Bool AMK_bQuitDcOn;    
    // Unit: None
    _Bool AMK_bDcOn;    
    // Unit: None
    _Bool AMK_bQuitInverterOn;    
    // Unit: None
    _Bool AMK_bInverterOn;    
    // Unit: None
    _Bool AMK_bDerating;    
    // Unit: rpm
    int16_t AMK_ActualVelocity;    
    // Unit: None
    int16_t AMK_TorqueCurrent;    
    // Unit: None
    int16_t AMK_MagnetizingCurrent;
}TsAMK0_ActualValues1;

/** 
 * Message: AMK0_ActualValues2
 * Senders: ['AMK0']
 * Receivers: ['FC']
 * Cycle Time: 5
 * Bus: Undefined
 */
typedef struct AMK0_ActualValues2 {    
    // Unit: ï¿½C
    float AMK_TempMotor;    
    // Unit: ï¿½C
    float AMK_TempInverter;    
    // Unit: None
    uint16_t AMK_ErrorInfo;    
    // Unit: ï¿½C
    float AMK_TempIGBT;
}TsAMK0_ActualValues2;

/** 
 * Message: AMK0_SetPoints1
 * Senders: ['FC']
 * Receivers: ['AMK0']
 * Cycle Time: 5
 * Bus: Undefined
 */
typedef struct AMK0_SetPoints1 {    
    // Unit: None
    _Bool AMK_bInverterOn;    
    // Unit: None
    _Bool AMK_bDcOn;    
    // Unit: None
    _Bool AMK_bEnable;    
    // Unit: None
    _Bool AMK_bErrorReset;    
    // Unit: rpm
    int16_t AMK_TargetVelocity;    
    // Unit: 0.1%Mn
    int16_t AMK_TorqueLimitPositiv;    
    // Unit: 0.1%Mn
    int16_t AMK_TorqueLimitNegativ;
}TsAMK0_SetPoints1;

/** 
 * Message: Contactor_States
 * Senders: ['FC']
 * Receivers: ['BMS']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct Contactor_States {    
    // Unit: None
    uint8_t Pack_Positive;    
    // Unit: None
    uint8_t Pack_Precharge;    
    // Unit: None
    uint8_t Pack_Negative;
}TsContactor_States;

/** 
 * Message: Pack_State
 * Senders: ['BMS']
 * Receivers: ['FC']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct Pack_State {    
    // Unit: Amps
    float Pack_Current;    
    // Unit: Volts
    float Pack_Inst_Voltage;    
    // Unit: Volts
    float Avg_Cell_Voltage;    
    // Unit: Num
    uint8_t Populated_Cells;
}TsPack_State;

/** 
 * Message: Pack_Current_Limits
 * Senders: ['BMS']
 * Receivers: ['FC']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct Pack_Current_Limits {    
    // Unit: Amps
    uint16_t Pack_CCL;    
    // Unit: Amps
    uint16_t Pack_DCL;
}TsPack_Current_Limits;

/** 
 * Message: Pack_SOC
 * Senders: ['BMS']
 * Receivers: ['FC']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct Pack_SOC {    
    // Unit: Percent
    float Pack_SOC;    
    // Unit: Volts
    float Maximum_Pack_Voltage;
}TsPack_SOC;

/** 
 * Message: Contactor_Feedback
 * Senders: ['BMS']
 * Receivers: ['FC']
 * Cycle Time: Undefined
 * Bus: Undefined
 */
typedef struct Contactor_Feedback {    
    // Unit: None
    _Bool Pack_Precharge_Feedback;    
    // Unit: None
    _Bool Pack_Negative_Feedback;    
    // Unit: None
    _Bool Pack_Positive_Feedback;
}TsContactor_Feedback;


/*********************************************************
*                       MESSAGE MACROS
*********************************************************/
#define NUM_RX_MESSAGES    (8)
#define NUM_TX_MESSAGES    (3)
#define TOTAL_MESSAGES     (11)

#define AMK1_SETPOINTS1_DATA_LENGTH            (8)
#define AMK1_ACTUALVALUES2_DATA_LENGTH         (8)
#define AMK1_ACTUALVALUES1_DATA_LENGTH         (8)
#define AMK0_ACTUALVALUES1_DATA_LENGTH         (8)
#define AMK0_ACTUALVALUES2_DATA_LENGTH         (8)
#define AMK0_SETPOINTS1_DATA_LENGTH            (8)
#define CONTACTOR_STATES_DATA_LENGTH           (3)
#define PACK_STATE_DATA_LENGTH                 (7)
#define PACK_CURRENT_LIMITS_DATA_LENGTH        (4)
#define PACK_SOC_DATA_LENGTH                   (3)
#define CONTACTOR_FEEDBACK_DATA_LENGTH         (1)
/*********************************************************
*                       SIGNAL MACROS
*********************************************************/

// Message: AMK1_SetPoints1

// Signal: AMK_bInverterOn
#define AMK1_SETPOINTS1_AMK_BINVERTERON_START    (8)
#define AMK1_SETPOINTS1_AMK_BINVERTERON_LENGTH   (1)
#define AMK1_SETPOINTS1_AMK_BINVERTERON_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_BINVERTERON_OFFSET   (0)

// Signal: AMK_bDcOn
#define AMK1_SETPOINTS1_AMK_BDCON_START    (9)
#define AMK1_SETPOINTS1_AMK_BDCON_LENGTH   (1)
#define AMK1_SETPOINTS1_AMK_BDCON_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_BDCON_OFFSET   (0)

// Signal: AMK_bEnable
#define AMK1_SETPOINTS1_AMK_BENABLE_START    (10)
#define AMK1_SETPOINTS1_AMK_BENABLE_LENGTH   (1)
#define AMK1_SETPOINTS1_AMK_BENABLE_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_BENABLE_OFFSET   (0)

// Signal: AMK_bErrorReset
#define AMK1_SETPOINTS1_AMK_BERRORRESET_START    (11)
#define AMK1_SETPOINTS1_AMK_BERRORRESET_LENGTH   (1)
#define AMK1_SETPOINTS1_AMK_BERRORRESET_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_BERRORRESET_OFFSET   (0)

// Signal: AMK_TargetVelocity
#define AMK1_SETPOINTS1_AMK_TARGETVELOCITY_START    (16)
#define AMK1_SETPOINTS1_AMK_TARGETVELOCITY_LENGTH   (16)
#define AMK1_SETPOINTS1_AMK_TARGETVELOCITY_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_TARGETVELOCITY_OFFSET   (0)

// Signal: AMK_TorqueLimitPositiv
#define AMK1_SETPOINTS1_AMK_TORQUELIMITPOSITIV_START    (32)
#define AMK1_SETPOINTS1_AMK_TORQUELIMITPOSITIV_LENGTH   (16)
#define AMK1_SETPOINTS1_AMK_TORQUELIMITPOSITIV_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_TORQUELIMITPOSITIV_OFFSET   (0)

// Signal: AMK_TorqueLimitNegativ
#define AMK1_SETPOINTS1_AMK_TORQUELIMITNEGATIV_START    (48)
#define AMK1_SETPOINTS1_AMK_TORQUELIMITNEGATIV_LENGTH   (16)
#define AMK1_SETPOINTS1_AMK_TORQUELIMITNEGATIV_FACTOR   (1)
#define AMK1_SETPOINTS1_AMK_TORQUELIMITNEGATIV_OFFSET   (0)

// Message: AMK1_ActualValues2

// Signal: AMK_TempMotor
#define AMK1_ACTUALVALUES2_AMK_TEMPMOTOR_START    (0)
#define AMK1_ACTUALVALUES2_AMK_TEMPMOTOR_LENGTH   (16)
#define AMK1_ACTUALVALUES2_AMK_TEMPMOTOR_FACTOR   (0.1)
#define AMK1_ACTUALVALUES2_AMK_TEMPMOTOR_OFFSET   (0)

// Signal: AMK_TempInverter
#define AMK1_ACTUALVALUES2_AMK_TEMPINVERTER_START    (16)
#define AMK1_ACTUALVALUES2_AMK_TEMPINVERTER_LENGTH   (16)
#define AMK1_ACTUALVALUES2_AMK_TEMPINVERTER_FACTOR   (0.1)
#define AMK1_ACTUALVALUES2_AMK_TEMPINVERTER_OFFSET   (0)

// Signal: AMK_ErrorInfo
#define AMK1_ACTUALVALUES2_AMK_ERRORINFO_START    (32)
#define AMK1_ACTUALVALUES2_AMK_ERRORINFO_LENGTH   (16)
#define AMK1_ACTUALVALUES2_AMK_ERRORINFO_FACTOR   (1)
#define AMK1_ACTUALVALUES2_AMK_ERRORINFO_OFFSET   (0)

// Signal: AMK_TempIGBT
#define AMK1_ACTUALVALUES2_AMK_TEMPIGBT_START    (48)
#define AMK1_ACTUALVALUES2_AMK_TEMPIGBT_LENGTH   (16)
#define AMK1_ACTUALVALUES2_AMK_TEMPIGBT_FACTOR   (0.1)
#define AMK1_ACTUALVALUES2_AMK_TEMPIGBT_OFFSET   (0)

// Message: AMK1_ActualValues1

// Signal: AMK_bSystemReady
#define AMK1_ACTUALVALUES1_AMK_BSYSTEMREADY_START    (8)
#define AMK1_ACTUALVALUES1_AMK_BSYSTEMREADY_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BSYSTEMREADY_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BSYSTEMREADY_OFFSET   (0)

// Signal: AMK_bError
#define AMK1_ACTUALVALUES1_AMK_BERROR_START    (9)
#define AMK1_ACTUALVALUES1_AMK_BERROR_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BERROR_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BERROR_OFFSET   (0)

// Signal: AMK_bWarn
#define AMK1_ACTUALVALUES1_AMK_BWARN_START    (10)
#define AMK1_ACTUALVALUES1_AMK_BWARN_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BWARN_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BWARN_OFFSET   (0)

// Signal: AMK_bQuitDcOn
#define AMK1_ACTUALVALUES1_AMK_BQUITDCON_START    (11)
#define AMK1_ACTUALVALUES1_AMK_BQUITDCON_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BQUITDCON_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BQUITDCON_OFFSET   (0)

// Signal: AMK_bDcOn
#define AMK1_ACTUALVALUES1_AMK_BDCON_START    (12)
#define AMK1_ACTUALVALUES1_AMK_BDCON_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BDCON_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BDCON_OFFSET   (0)

// Signal: AMK_bQuitInverterOn
#define AMK1_ACTUALVALUES1_AMK_BQUITINVERTERON_START    (13)
#define AMK1_ACTUALVALUES1_AMK_BQUITINVERTERON_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BQUITINVERTERON_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BQUITINVERTERON_OFFSET   (0)

// Signal: AMK_bInverterOn
#define AMK1_ACTUALVALUES1_AMK_BINVERTERON_START    (14)
#define AMK1_ACTUALVALUES1_AMK_BINVERTERON_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BINVERTERON_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BINVERTERON_OFFSET   (0)

// Signal: AMK_bDerating
#define AMK1_ACTUALVALUES1_AMK_BDERATING_START    (15)
#define AMK1_ACTUALVALUES1_AMK_BDERATING_LENGTH   (1)
#define AMK1_ACTUALVALUES1_AMK_BDERATING_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_BDERATING_OFFSET   (0)

// Signal: AMK_ActualVelocity
#define AMK1_ACTUALVALUES1_AMK_ACTUALVELOCITY_START    (16)
#define AMK1_ACTUALVALUES1_AMK_ACTUALVELOCITY_LENGTH   (16)
#define AMK1_ACTUALVALUES1_AMK_ACTUALVELOCITY_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_ACTUALVELOCITY_OFFSET   (0)

// Signal: AMK_TorqueCurrent
#define AMK1_ACTUALVALUES1_AMK_TORQUECURRENT_START    (32)
#define AMK1_ACTUALVALUES1_AMK_TORQUECURRENT_LENGTH   (16)
#define AMK1_ACTUALVALUES1_AMK_TORQUECURRENT_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_TORQUECURRENT_OFFSET   (0)

// Signal: AMK_MagnetizingCurrent
#define AMK1_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_START    (48)
#define AMK1_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_LENGTH   (16)
#define AMK1_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_FACTOR   (1)
#define AMK1_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_OFFSET   (0)

// Message: AMK0_ActualValues1

// Signal: AMK_bSystemReady
#define AMK0_ACTUALVALUES1_AMK_BSYSTEMREADY_START    (8)
#define AMK0_ACTUALVALUES1_AMK_BSYSTEMREADY_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BSYSTEMREADY_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BSYSTEMREADY_OFFSET   (0)

// Signal: AMK_bError
#define AMK0_ACTUALVALUES1_AMK_BERROR_START    (9)
#define AMK0_ACTUALVALUES1_AMK_BERROR_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BERROR_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BERROR_OFFSET   (0)

// Signal: AMK_bWarn
#define AMK0_ACTUALVALUES1_AMK_BWARN_START    (10)
#define AMK0_ACTUALVALUES1_AMK_BWARN_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BWARN_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BWARN_OFFSET   (0)

// Signal: AMK_bQuitDcOn
#define AMK0_ACTUALVALUES1_AMK_BQUITDCON_START    (11)
#define AMK0_ACTUALVALUES1_AMK_BQUITDCON_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BQUITDCON_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BQUITDCON_OFFSET   (0)

// Signal: AMK_bDcOn
#define AMK0_ACTUALVALUES1_AMK_BDCON_START    (12)
#define AMK0_ACTUALVALUES1_AMK_BDCON_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BDCON_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BDCON_OFFSET   (0)

// Signal: AMK_bQuitInverterOn
#define AMK0_ACTUALVALUES1_AMK_BQUITINVERTERON_START    (13)
#define AMK0_ACTUALVALUES1_AMK_BQUITINVERTERON_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BQUITINVERTERON_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BQUITINVERTERON_OFFSET   (0)

// Signal: AMK_bInverterOn
#define AMK0_ACTUALVALUES1_AMK_BINVERTERON_START    (14)
#define AMK0_ACTUALVALUES1_AMK_BINVERTERON_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BINVERTERON_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BINVERTERON_OFFSET   (0)

// Signal: AMK_bDerating
#define AMK0_ACTUALVALUES1_AMK_BDERATING_START    (15)
#define AMK0_ACTUALVALUES1_AMK_BDERATING_LENGTH   (1)
#define AMK0_ACTUALVALUES1_AMK_BDERATING_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_BDERATING_OFFSET   (0)

// Signal: AMK_ActualVelocity
#define AMK0_ACTUALVALUES1_AMK_ACTUALVELOCITY_START    (16)
#define AMK0_ACTUALVALUES1_AMK_ACTUALVELOCITY_LENGTH   (16)
#define AMK0_ACTUALVALUES1_AMK_ACTUALVELOCITY_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_ACTUALVELOCITY_OFFSET   (0)

// Signal: AMK_TorqueCurrent
#define AMK0_ACTUALVALUES1_AMK_TORQUECURRENT_START    (32)
#define AMK0_ACTUALVALUES1_AMK_TORQUECURRENT_LENGTH   (16)
#define AMK0_ACTUALVALUES1_AMK_TORQUECURRENT_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_TORQUECURRENT_OFFSET   (0)

// Signal: AMK_MagnetizingCurrent
#define AMK0_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_START    (48)
#define AMK0_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_LENGTH   (16)
#define AMK0_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_FACTOR   (1)
#define AMK0_ACTUALVALUES1_AMK_MAGNETIZINGCURRENT_OFFSET   (0)

// Message: AMK0_ActualValues2

// Signal: AMK_TempMotor
#define AMK0_ACTUALVALUES2_AMK_TEMPMOTOR_START    (0)
#define AMK0_ACTUALVALUES2_AMK_TEMPMOTOR_LENGTH   (16)
#define AMK0_ACTUALVALUES2_AMK_TEMPMOTOR_FACTOR   (0.1)
#define AMK0_ACTUALVALUES2_AMK_TEMPMOTOR_OFFSET   (0)

// Signal: AMK_TempInverter
#define AMK0_ACTUALVALUES2_AMK_TEMPINVERTER_START    (16)
#define AMK0_ACTUALVALUES2_AMK_TEMPINVERTER_LENGTH   (16)
#define AMK0_ACTUALVALUES2_AMK_TEMPINVERTER_FACTOR   (0.1)
#define AMK0_ACTUALVALUES2_AMK_TEMPINVERTER_OFFSET   (0)

// Signal: AMK_ErrorInfo
#define AMK0_ACTUALVALUES2_AMK_ERRORINFO_START    (32)
#define AMK0_ACTUALVALUES2_AMK_ERRORINFO_LENGTH   (16)
#define AMK0_ACTUALVALUES2_AMK_ERRORINFO_FACTOR   (1)
#define AMK0_ACTUALVALUES2_AMK_ERRORINFO_OFFSET   (0)

// Signal: AMK_TempIGBT
#define AMK0_ACTUALVALUES2_AMK_TEMPIGBT_START    (48)
#define AMK0_ACTUALVALUES2_AMK_TEMPIGBT_LENGTH   (16)
#define AMK0_ACTUALVALUES2_AMK_TEMPIGBT_FACTOR   (0.1)
#define AMK0_ACTUALVALUES2_AMK_TEMPIGBT_OFFSET   (0)

// Message: AMK0_SetPoints1

// Signal: AMK_bInverterOn
#define AMK0_SETPOINTS1_AMK_BINVERTERON_START    (8)
#define AMK0_SETPOINTS1_AMK_BINVERTERON_LENGTH   (1)
#define AMK0_SETPOINTS1_AMK_BINVERTERON_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_BINVERTERON_OFFSET   (0)

// Signal: AMK_bDcOn
#define AMK0_SETPOINTS1_AMK_BDCON_START    (9)
#define AMK0_SETPOINTS1_AMK_BDCON_LENGTH   (1)
#define AMK0_SETPOINTS1_AMK_BDCON_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_BDCON_OFFSET   (0)

// Signal: AMK_bEnable
#define AMK0_SETPOINTS1_AMK_BENABLE_START    (10)
#define AMK0_SETPOINTS1_AMK_BENABLE_LENGTH   (1)
#define AMK0_SETPOINTS1_AMK_BENABLE_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_BENABLE_OFFSET   (0)

// Signal: AMK_bErrorReset
#define AMK0_SETPOINTS1_AMK_BERRORRESET_START    (11)
#define AMK0_SETPOINTS1_AMK_BERRORRESET_LENGTH   (1)
#define AMK0_SETPOINTS1_AMK_BERRORRESET_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_BERRORRESET_OFFSET   (0)

// Signal: AMK_TargetVelocity
#define AMK0_SETPOINTS1_AMK_TARGETVELOCITY_START    (16)
#define AMK0_SETPOINTS1_AMK_TARGETVELOCITY_LENGTH   (16)
#define AMK0_SETPOINTS1_AMK_TARGETVELOCITY_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_TARGETVELOCITY_OFFSET   (0)

// Signal: AMK_TorqueLimitPositiv
#define AMK0_SETPOINTS1_AMK_TORQUELIMITPOSITIV_START    (32)
#define AMK0_SETPOINTS1_AMK_TORQUELIMITPOSITIV_LENGTH   (16)
#define AMK0_SETPOINTS1_AMK_TORQUELIMITPOSITIV_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_TORQUELIMITPOSITIV_OFFSET   (0)

// Signal: AMK_TorqueLimitNegativ
#define AMK0_SETPOINTS1_AMK_TORQUELIMITNEGATIV_START    (48)
#define AMK0_SETPOINTS1_AMK_TORQUELIMITNEGATIV_LENGTH   (16)
#define AMK0_SETPOINTS1_AMK_TORQUELIMITNEGATIV_FACTOR   (1)
#define AMK0_SETPOINTS1_AMK_TORQUELIMITNEGATIV_OFFSET   (0)

// Message: Contactor_States

// Signal: Pack_Positive
#define CONTACTOR_STATES_PACK_POSITIVE_START    (0)
#define CONTACTOR_STATES_PACK_POSITIVE_LENGTH   (8)
#define CONTACTOR_STATES_PACK_POSITIVE_FACTOR   (1)
#define CONTACTOR_STATES_PACK_POSITIVE_OFFSET   (0)

// Signal: Pack_Precharge
#define CONTACTOR_STATES_PACK_PRECHARGE_START    (8)
#define CONTACTOR_STATES_PACK_PRECHARGE_LENGTH   (8)
#define CONTACTOR_STATES_PACK_PRECHARGE_FACTOR   (1)
#define CONTACTOR_STATES_PACK_PRECHARGE_OFFSET   (0)

// Signal: Pack_Negative
#define CONTACTOR_STATES_PACK_NEGATIVE_START    (16)
#define CONTACTOR_STATES_PACK_NEGATIVE_LENGTH   (8)
#define CONTACTOR_STATES_PACK_NEGATIVE_FACTOR   (1)
#define CONTACTOR_STATES_PACK_NEGATIVE_OFFSET   (0)

// Message: Pack_State

// Signal: Pack_Current
#define PACK_STATE_PACK_CURRENT_START    (0)
#define PACK_STATE_PACK_CURRENT_LENGTH   (16)
#define PACK_STATE_PACK_CURRENT_FACTOR   (0.1)
#define PACK_STATE_PACK_CURRENT_OFFSET   (0)

// Signal: Pack_Inst_Voltage
#define PACK_STATE_PACK_INST_VOLTAGE_START    (16)
#define PACK_STATE_PACK_INST_VOLTAGE_LENGTH   (16)
#define PACK_STATE_PACK_INST_VOLTAGE_FACTOR   (0.1)
#define PACK_STATE_PACK_INST_VOLTAGE_OFFSET   (0)

// Signal: Avg_Cell_Voltage
#define PACK_STATE_AVG_CELL_VOLTAGE_START    (32)
#define PACK_STATE_AVG_CELL_VOLTAGE_LENGTH   (16)
#define PACK_STATE_AVG_CELL_VOLTAGE_FACTOR   (0.0001)
#define PACK_STATE_AVG_CELL_VOLTAGE_OFFSET   (0)

// Signal: Populated_Cells
#define PACK_STATE_POPULATED_CELLS_START    (48)
#define PACK_STATE_POPULATED_CELLS_LENGTH   (8)
#define PACK_STATE_POPULATED_CELLS_FACTOR   (1)
#define PACK_STATE_POPULATED_CELLS_OFFSET   (0)

// Message: Pack_Current_Limits

// Signal: Pack_CCL
#define PACK_CURRENT_LIMITS_PACK_CCL_START    (0)
#define PACK_CURRENT_LIMITS_PACK_CCL_LENGTH   (16)
#define PACK_CURRENT_LIMITS_PACK_CCL_FACTOR   (1)
#define PACK_CURRENT_LIMITS_PACK_CCL_OFFSET   (0)

// Signal: Pack_DCL
#define PACK_CURRENT_LIMITS_PACK_DCL_START    (16)
#define PACK_CURRENT_LIMITS_PACK_DCL_LENGTH   (16)
#define PACK_CURRENT_LIMITS_PACK_DCL_FACTOR   (1)
#define PACK_CURRENT_LIMITS_PACK_DCL_OFFSET   (0)

// Message: Pack_SOC

// Signal: Pack_SOC
#define PACK_SOC_PACK_SOC_START    (0)
#define PACK_SOC_PACK_SOC_LENGTH   (8)
#define PACK_SOC_PACK_SOC_FACTOR   (0.5)
#define PACK_SOC_PACK_SOC_OFFSET   (0)

// Signal: Maximum_Pack_Voltage
#define PACK_SOC_MAXIMUM_PACK_VOLTAGE_START    (8)
#define PACK_SOC_MAXIMUM_PACK_VOLTAGE_LENGTH   (16)
#define PACK_SOC_MAXIMUM_PACK_VOLTAGE_FACTOR   (0.1)
#define PACK_SOC_MAXIMUM_PACK_VOLTAGE_OFFSET   (0)

// Message: Contactor_Feedback

// Signal: Pack_Precharge_Feedback
#define CONTACTOR_FEEDBACK_PACK_PRECHARGE_FEEDBACK_START    (0)
#define CONTACTOR_FEEDBACK_PACK_PRECHARGE_FEEDBACK_LENGTH   (1)
#define CONTACTOR_FEEDBACK_PACK_PRECHARGE_FEEDBACK_FACTOR   (1)
#define CONTACTOR_FEEDBACK_PACK_PRECHARGE_FEEDBACK_OFFSET   (0)

// Signal: Pack_Negative_Feedback
#define CONTACTOR_FEEDBACK_PACK_NEGATIVE_FEEDBACK_START    (1)
#define CONTACTOR_FEEDBACK_PACK_NEGATIVE_FEEDBACK_LENGTH   (1)
#define CONTACTOR_FEEDBACK_PACK_NEGATIVE_FEEDBACK_FACTOR   (1)
#define CONTACTOR_FEEDBACK_PACK_NEGATIVE_FEEDBACK_OFFSET   (0)

// Signal: Pack_Positive_Feedback
#define CONTACTOR_FEEDBACK_PACK_POSITIVE_FEEDBACK_START    (2)
#define CONTACTOR_FEEDBACK_PACK_POSITIVE_FEEDBACK_LENGTH   (1)
#define CONTACTOR_FEEDBACK_PACK_POSITIVE_FEEDBACK_FACTOR   (1)
#define CONTACTOR_FEEDBACK_PACK_POSITIVE_FEEDBACK_OFFSET   (0)


/*********************************************************
*                 GLOBAL STRUCT DECLARATIONS
*********************************************************/

extern volatile TsAMK1_SetPoints1            AMK1_SetPoints1;
extern volatile TsAMK1_ActualValues2         AMK1_ActualValues2;
extern volatile TsAMK1_ActualValues1         AMK1_ActualValues1;
extern volatile TsAMK0_ActualValues1         AMK0_ActualValues1;
extern volatile TsAMK0_ActualValues2         AMK0_ActualValues2;
extern volatile TsAMK0_SetPoints1            AMK0_SetPoints1;
extern volatile TsContactor_States           Contactor_States;
extern volatile TsPack_State                 Pack_State;
extern volatile TsPack_Current_Limits        Pack_Current_Limits;
extern volatile TsPack_SOC                   Pack_SOC;
extern volatile TsContactor_Feedback         Contactor_Feedback;

/*********************************************************
*               PUBLIC FUNCTION DECLARATIONS
*********************************************************/

void Print_AMK1_SetPoints1(void);
void Print_AMK1_ActualValues2(void);
void Print_AMK1_ActualValues1(void);
void Print_AMK0_ActualValues1(void);
void Print_AMK0_ActualValues2(void);
void Print_AMK0_SetPoints1(void);
void Print_Contactor_States(void);
void Print_Pack_State(void);
void Print_Pack_Current_Limits(void);
void Print_Pack_SOC(void);
void Print_Contactor_Feedback(void);

TeCanALRet Print_Message(uint32_t *ID);
TeCanALRet GetTxDataLength(TeMessageID *ID, uint32_t *dlc);
TeCanALRet MarshalBinary(TeMessageID *ID, uint8_t* rawData);
TeCanALRet UnmarshalBinary(uint32_t *ID, uint8_t* txData);

#endif /* INC_CANAL_FC_MESSAGES_H_ */
